// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  username    String
  clerkId     String         @unique
  email       String         @unique
  watchHistory WatchHistory[]
  sentRequests    FriendRequests[] @relation("SentRequests")
  receivedRequests FriendRequests[] @relation("ReceivedRequests")
  friends         Friend[]          @relation("Friends_user")
  friendOf        Friend[]          @relation("Friends_friend")
}

model WatchHistory {
  id        Int      @id @default(autoincrement())
  title     String
  watchedAt DateTime
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Friend {
  id        Int      @id @default(autoincrement())
  userId    Int
  friendId  Int
  user      User     @relation("Friends_user", fields: [userId], references: [id], onDelete: Cascade)
  friend    User     @relation("Friends_friend", fields: [friendId], references: [id], onDelete: Cascade)
}

model FriendRequests {
  id         Int      @id @default(autoincrement())
  senderId   String
  receiverId String
  createdAt  DateTime @default(now())

  sender     User     @relation("SentRequests", fields: [senderId], references: [clerkId])
  receiver   User     @relation("ReceivedRequests", fields: [receiverId], references: [clerkId])
}


